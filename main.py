# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h7GXOTHm5bpiofNffzDFGpo_AhUJVem5
"""

#zadanie1
def import_students_from_txt(file_path):
    students = []
    try:
        with open(file_path, mode='r', encoding='utf-8') as file:
            lines = file.readlines()
            for line in lines:
                data = line.strip().split(", ")
                students.append({"id": data[0], "name": data[1], "presence": data[2]})
        if not students:
            print("Lista studentów jest pusta.")
        else:
            print(f"Zaimportowano {len(students)} studentów.")
    except FileNotFoundError:
        print("Plik nie został znaleziony.")
    except IndexError:
        print("Błąd podczas odczytu pliku. Upewnij się, że plik jest poprawnie sformatowany.")
    return students

def export_students_to_txt(students, file_path):
    if not students:
        print("Brak danych do zapisania.")
        return
    with open(file_path, mode='w', encoding='utf-8') as file:
        for student in students:
            file.write(f"{student['id']}, {student['name']}, {student['presence']}\n")
    print(f"Zaktualizowana lista obecności została zapisana w {file_path}")

students = import_students_from_txt("students.txt")

if students:
    students[0]["presence"] = "Obecny"

    export_students_to_txt(students, "updated_students.txt")
else:
    print("Nie można edytować obecności, ponieważ lista studentów jest pusta.")

def add_student(students):
    student_id = input("Podaj ID studenta: ")
    name = input("Podaj imię studenta: ")
    surname = input("Podaj nazwisko studenta: ")
    students.append({
        "ID": student_id,
        "Imię": name,
        "Nazwisko": surname,
        "Obecność": "Nieobecny"
    })

add_student(students)

# zad 3
def mark_attendance(attendance_records, student_name, date, present):
    if date not in attendance_records:
        attendance_records[date] = {}
    
    attendance_records[date][student_name] = present
    print(f"Obecność dla {student_name} na {date} została zaznaczona jako {'obecny' if present else 'nieobecny'}.")

def edit_attendance(attendance_records, student_name, date, present):
    if date in attendance_records and student_name in attendance_records[date]:
        attendance_records[date][student_name] = present
        print(f"Obecność dla {student_name} na {date} została edytowana na {'obecny' if present else 'nieobecny'}.")
    else:
        print(f"Brak zapisu obecności dla {student_name} na {date}. Aby edytować, najpierw musisz zaznaczyć obecność.")

def check_attendance(attendance_records, student_name, date):
    if date in attendance_records and student_name in attendance_records[date]:
        return attendance_records[date][student_name]
    else:
        print(f"Brak zapisu obecności dla {student_name} na {date}.")
        return None

print("\nPo dodaniu nowego studenta:")
for student in students:
    print(student)